# Copyright (c) 2011-2016, 2018-2020 The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#on init
#    chown system radio /sys/class/host_notify/usb_otg/booster
#    chmod 0660 /sys/class/host_notify/usb_otg/booster
#    chown system radio /sys/class/usb_notify/usb_control/disable
#    chmod 0660 /sys/class/usb_notify/usb_control/disable
#    chown root system /sys/class/usb_notify/usb_control/usb_data_enabled
#    chmod 0664 /sys/class/usb_notify/usb_control/usb_data_enabled
#
## usb hw param
#    chown system usb /sys/class/usb_notify/usb_control/usb_hw_param
#    chmod 0664 /sys/class/usb_notify/usb_control/usb_hw_param
#    chown system usb /sys/class/usb_notify/usb_control/hw_param
#    chmod 0664 /sys/class/usb_notify/usb_control/hw_param
#
## usb whitelist
#    chown system usb /sys/class/usb_notify/usb_control/whitelist_for_mdm
#    chmod 0664 /sys/class/usb_notify/usb_control/whitelist_for_mdm
#
#on charger && property:ro.debuggable=1
#    mkdir /dev/usb-ffs 0770 shell shell
#    mkdir /dev/usb-ffs/adb 0770 shell shell
#    mount configfs none /config
#    mkdir /config/usb_gadget/g1 0770
#    mkdir /config/usb_gadget/g1/strings/0x409 0770
#    write /config/usb_gadget/g1/bcdUSB 0x0200
#    write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
#    write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
#    mkdir /config/usb_gadget/g1/functions/ffs.adb
#    mkdir /config/usb_gadget/g1/configs/b.1 0770
#    mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770
#    write /config/usb_gadget/g1/configs/b.1/MaxPower 900
#    symlink /config/usb_gadget/g1/configs/b.1 /config/usb_gadget/g1/os_desc/b.1
#    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
##    exec u:r:vendor_qti_init_shell:s0 -- /vendor/bin/init.qcom.usb.sh
#    write /sys/class/android_usb/android0/f_ffs/aliases adb
#    setprop sys.usb.config adb
#    setprop sys.usb.configfs 1
#
##on init
##    exec u:r:vendor-qti-testscripts:s0 -- /vendor/bin/sh /vendor/bin/init.qti.usb.debug.sh


on boot
    write /proc/sys/kernel/panic_on_oops 2
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    mount configfs none /config
    mkdir /config/usb_gadget/g1 0770
    mkdir /config/usb_gadget/g2 0770
    mkdir /config/usb_gadget/g1/strings/0x409 0770
    mkdir /config/usb_gadget/g2/strings/0x409 0770
    write /config/usb_gadget/g1/bcdUSB 0x0200
    write /config/usb_gadget/g2/bcdUSB 0x0200
    write /config/usb_gadget/g1/os_desc/use 1
    write /config/usb_gadget/g1/strings/0x409/serialnumber ${ro.serialno}
    write /config/usb_gadget/g2/strings/0x409/serialnumber ${ro.serialno}
    write /config/usb_gadget/g1/strings/0x409/manufacturer ${ro.product.manufacturer}
    write /config/usb_gadget/g2/strings/0x409/manufacturer ${ro.product.manufacturer}
    write /config/usb_gadget/g1/strings/0x409/product ${ro.product.model}
    write /config/usb_gadget/g2/strings/0x409/product ${ro.product.model}
    mkdir /config/usb_gadget/g1/functions/mass_storage.0
    mkdir /config/usb_gadget/g1/functions/mtp.gs0
    mkdir /config/usb_gadget/g1/functions/accessory.gs2
    mkdir /config/usb_gadget/g1/functions/audio_source.gs3
    mkdir /config/usb_gadget/g1/functions/ffs.adb
    mkdir /config/usb_gadget/g1/functions/ffs.diag
    mkdir /config/usb_gadget/g1/functions/ffs.diag_mdm
    mkdir /config/usb_gadget/g1/functions/ffs.diag_mdm2
    mkdir /config/usb_gadget/g1/functions/diag.diag
    mkdir /config/usb_gadget/g1/functions/diag.diag_mdm
    mkdir /config/usb_gadget/g1/functions/diag.diag_mdm2
    mkdir /config/usb_gadget/g1/functions/cser.dun.0
    mkdir /config/usb_gadget/g1/functions/cser.nmea.1
    mkdir /config/usb_gadget/g1/functions/cser.dun.2
    mkdir /config/usb_gadget/g1/functions/gsi.rmnet
    mkdir /config/usb_gadget/g1/functions/gsi.rndis
    mkdir /config/usb_gadget/g1/functions/gsi.dpl
    mkdir /config/usb_gadget/g1/functions/qdss.qdss
    mkdir /config/usb_gadget/g1/functions/qdss.qdss_mdm
    mkdir /config/usb_gadget/g1/functions/rndis_bam.rndis
    mkdir /config/usb_gadget/g1/functions/rndis.rndis
    mkdir /config/usb_gadget/g1/functions/rmnet_bam.rmnet
    mkdir /config/usb_gadget/g1/functions/rmnet_bam.dpl
    mkdir /config/usb_gadget/g1/functions/rmnet_bam.rmnet_bam_dmux
    mkdir /config/usb_gadget/g1/functions/rmnet_bam.dpl_bam_dmux
    mkdir /config/usb_gadget/g1/functions/ccid.ccid
    mkdir /config/usb_gadget/g1/functions/acm.0
    mkdir /config/usb_gadget/g1/functions/uac2.0
    mkdir /config/usb_gadget/g1/functions/uvc.0
    mkdir /config/usb_gadget/g1/configs/b.1 0770
    mkdir /config/usb_gadget/g2/configs/b.1 0770
    mkdir /config/usb_gadget/g1/configs/b.1/strings/0x409 0770
    mkdir /config/usb_gadget/g2/configs/b.1/strings/0x409 0770
    write /config/usb_gadget/g1/os_desc/b_vendor_code 0x1
    write /config/usb_gadget/g1/os_desc/qw_sign "MSFT100"
    symlink /config/usb_gadget/g1/configs/b.1 /config/usb_gadget/g1/os_desc/b.1
    mkdir /dev/usb-ffs 0775 shell system
    mkdir /dev/usb-ffs/adb 0770 shell system
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=1000,rmode=0770,fmode=0660
    write /sys/class/android_usb/android0/f_ffs/aliases adb
    setprop vendor.usb.controller ${sys.usb.controller}

on property:ro.boot.usbcontroller=*
    setprop sys.usb.controller ${ro.boot.usbcontroller}


on property:sys.usb.config=none
    write /config/usb_gadget/g1/UDC "none"
    stop adbd
    setprop sys.usb.ffs.ready 0
    write /config/usb_gadget/g1/bDeviceClass 0
    write /config/usb_gadget/g1/bDeviceSubClass 0
    write /config/usb_gadget/g1/bDeviceProtocol 0
    setprop sys.usb.state ${sys.usb.config}

#on property:sys.usb.config=mtp,adb,mass_storage
#    start adbd
    
on property:sys.usb.config=mtp,adb
    start adbd


on property:sys.usb.ffs.ready=1 && property:sys.usb.config=mtp,adb
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "mtp_adb"
    rm /config/usb_gadget/g1/configs/b.1/f1
    rm /config/usb_gadget/g1/configs/b.1/f2
    rm /config/usb_gadget/g1/configs/b.1/f3
    rm /config/usb_gadget/g1/configs/b.1/f4
    rm /config/usb_gadget/g1/configs/b.1/f5
    rm /config/usb_gadget/g1/configs/b.1/f6
    rm /config/usb_gadget/g1/configs/b.1/f7
    rm /config/usb_gadget/g1/configs/b.1/f8
    rm /config/usb_gadget/g1/configs/b.1/f9
    write /config/usb_gadget/g1/idVendor 0x04E8
    write /config/usb_gadget/g1/idProduct 0x6860
    symlink /config/usb_gadget/g1/functions/mtp.gs0 /config/usb_gadget/g1/configs/b.1/f1
    symlink /config/usb_gadget/g1/functions/acm.0 /config/usb_gadget/g1/configs/b.1/f2
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f3
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=adb
    start adbd

on property:sys.usb.ffs.ready=1 && property:sys.usb.config=adb
    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "adb"
    rm /config/usb_gadget/g1/configs/b.1/f1
    rm /config/usb_gadget/g1/configs/b.1/f2
    rm /config/usb_gadget/g1/configs/b.1/f3
    rm /config/usb_gadget/g1/configs/b.1/f4
    rm /config/usb_gadget/g1/configs/b.1/f5
    rm /config/usb_gadget/g1/configs/b.1/f6
    rm /config/usb_gadget/g1/configs/b.1/f7
    rm /config/usb_gadget/g1/configs/b.1/f8
    rm /config/usb_gadget/g1/configs/b.1/f9
    write /config/usb_gadget/g1/idVendor 0x04E8
    write /config/usb_gadget/g1/idProduct 0x6860
    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f1
    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
    setprop sys.usb.state ${sys.usb.config}

#on property:sys.usb.config=mass_storage,adb
#    start adbd
#
#on property:sys.usb.ffs.ready=1 && property:sys.usb.config=mass_storage,adb
#    write /config/usb_gadget/g1/configs/b.1/strings/0x409/configuration "mass_storage_adb"
#    rm /config/usb_gadget/g1/configs/b.1/f1
#    rm /config/usb_gadget/g1/configs/b.1/f2
#    rm /config/usb_gadget/g1/configs/b.1/f3
#    rm /config/usb_gadget/g1/configs/b.1/f4
#    rm /config/usb_gadget/g1/configs/b.1/f5
#    rm /config/usb_gadget/g1/configs/b.1/f6
#    rm /config/usb_gadget/g1/configs/b.1/f7
#    rm /config/usb_gadget/g1/configs/b.1/f8
#    rm /config/usb_gadget/g1/configs/b.1/f9
#    write /config/usb_gadget/g1/idVendor 0x04E8
#    write /config/usb_gadget/g1/idProduct 0x685E
#    symlink /config/usb_gadget/g1/functions/mass_storage.0 /config/usb_gadget/g1/configs/b.1/f1
#    symlink /config/usb_gadget/g1/functions/ffs.adb /config/usb_gadget/g1/configs/b.1/f2
#    write /config/usb_gadget/g1/UDC ${sys.usb.controller}
#    setprop sys.usb.state ${sys.usb.config}
